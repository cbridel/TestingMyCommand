//RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc771.TestingMyCommand;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

import com.ctre.phoenix.motorcontrol.can.*;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX driveWPI_TalonSRX1;
    public static WPI_TalonSRX driveWPI_TalonSRX2;
    public static WPI_TalonSRX driveWPI_TalonSRX3;
    public static SpeedControllerGroup driveSpeedControllerGroup1;
    public static WPI_TalonSRX driveWPI_TalonSRX4;
    public static WPI_TalonSRX driveWPI_TalonSRX5;
    public static WPI_TalonSRX driveWPI_TalonSRX6;
    public static SpeedControllerGroup driveSpeedControllerGroup2;
    public static DifferentialDrive driveDifferentialDrive1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
    	LiveWindow.setEnabled(true);
    	
    	//LiveWindow.addActuator(moduleType, 1, );
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveWPI_TalonSRX1 = new WPI_TalonSRX(2);
//        LiveWindow.addActuator("Drive", "CAN WPI_TalonSRX 1", driveWPI_TalonSRX1);
        
        driveWPI_TalonSRX2 = new WPI_TalonSRX(6);
//        LiveWindow.addActuator("Drive", "CAN WPI_TalonSRX 2", driveWPI_TalonSRX2);
        
        driveWPI_TalonSRX3 = new WPI_TalonSRX(7);
//        LiveWindow.addActuator("Drive", "CAN WPI_TalonSRX 3", driveWPI_TalonSRX3);
        
        driveSpeedControllerGroup2 = new SpeedControllerGroup(driveWPI_TalonSRX1, driveWPI_TalonSRX2 , driveWPI_TalonSRX3 );
//        LiveWindow.addActuator("Drive", "Speed Controller Group 1", driveSpeedControllerGroup1);
        
        driveWPI_TalonSRX4 = new WPI_TalonSRX(1);
//        LiveWindow.addActuator("Drive", "CAN WPI_TalonSRX 4", driveWPI_TalonSRX4);
        
        driveWPI_TalonSRX5 = new WPI_TalonSRX(8);
//        LiveWindow.addActuator("Drive", "CAN WPI_TalonSRX 5", driveWPI_TalonSRX5);
        
        driveWPI_TalonSRX6 = new WPI_TalonSRX(3);
//        LiveWindow.addActuator("Drive", "CAN WPI_TalonSRX 6", driveWPI_TalonSRX6);
        
        driveSpeedControllerGroup1 = new SpeedControllerGroup(driveWPI_TalonSRX4, driveWPI_TalonSRX5 , driveWPI_TalonSRX6 );
//        LiveWindow.addActuator("Drive", "Speed Controller Group 2", driveSpeedControllerGroup2);
        
        driveDifferentialDrive1 = new DifferentialDrive(driveSpeedControllerGroup1, driveSpeedControllerGroup2);
//        LiveWindow.addActuator("Drive", "Differential Drive 1", driveDifferentialDrive1);
        driveDifferentialDrive1.setSafetyEnabled(false);
        driveDifferentialDrive1.setExpiration(0.1);
        driveDifferentialDrive1.setMaxOutput(1.0);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
